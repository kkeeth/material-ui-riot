<material-button>
  <material-waves
    onclick={ click } onmousedown={ launch } center={ props.wavesCenter } rounded={ props.rounded } opacity={ props.wavesOpacity } color={ props.wavesColor }
                  duration={ props['waves-duration'] } class="material-waves"></material-waves>
  <div class="content">
    <slot />
  </div>

  <script>
    export default {
      // Dynamic attribute for using special styles.
      dynamicAttributes: ['disabled'],
      // Attributes
      disabled: false,
      // Launch waves
      launch(e) {
        if(!this.disabled) this.$('.material-waves').trigger('launch',e);
      },
      onBeforeMount(props) {
        this.disabled = props.disabled
      },
      onMounted() {
        console.log("hogehoge")
        /**
          * When wave will be starting invoke appropriate event
          */
        this.$('.material-waves').on('wavestart', (wave)=>{
            this.trigger('wavestart',wave);
        });
        /**
          * When wave will end invoke appropriate event
          */
        this.$('.material-waves').on('waveend',()=>{
            this.trigger('waveend');
        });
        // Add mixin
        this.mixin('dynamicAttributes');
      },
      // Trigger the click
      click() {
          if(this.props.link) window.location.href=this.props.link;
          this.trigger('click');
      }
    }
  </script>
</material-button>